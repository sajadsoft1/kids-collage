{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel OpenApi Demo Documentation",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https:///www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "Local Host"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "description": "Login user",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "example message"
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "default": "example token"
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "get user data",
                "operationId": "me",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "example message"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user",
                "description": "Logout user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "example message"
                                        },
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "500": {
                        "$ref": "#/components/responses/500"
                    }
                }
            }
        },
        "/banner": {
            "get": {
                "tags": [
                    "Banner"
                ],
                "summary": "get banners list",
                "description": "Returns list of banners",
                "operationId": "getBanners",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BannerResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/banner?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/banner?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/banner?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Banner"
                ],
                "summary": "Store new banner",
                "description": "Returns new banner data",
                "operationId": "storeBanner",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBannerRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBannerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "banner has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BannerResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/banner/{banner}": {
            "get": {
                "tags": [
                    "Banner"
                ],
                "summary": "Get banner information",
                "description": "Returns banner data",
                "operationId": "getBannerByID",
                "parameters": [
                    {
                        "name": "banner",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BannerDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Banner"
                ],
                "summary": "Update existing banner",
                "description": "Returns updated banner data",
                "operationId": "updateBanner",
                "parameters": [
                    {
                        "name": "banner",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBannerRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBannerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "banner has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BannerResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Banner"
                ],
                "summary": "Delete existing banner",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteBanner",
                "parameters": [
                    {
                        "name": "banner",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "banner has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/banner/toggle/{banner}": {
            "post": {
                "tags": [
                    "Banner"
                ],
                "summary": "Toggle Banner",
                "operationId": "toggleBanner",
                "parameters": [
                    {
                        "name": "banner",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "banner has been toggled successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BannerResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/banner/data": {
            "get": {
                "tags": [
                    "Banner"
                ],
                "summary": "Get Banner data",
                "description": "Returns Banner data",
                "operationId": "getBannerData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blog": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "get blogs list",
                "description": "Returns list of blogs",
                "operationId": "getBlogs",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BlogResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/blog?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/blog?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/blog?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Blog"
                ],
                "summary": "Store new blog",
                "description": "Returns new blog data",
                "operationId": "storeBlog",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBlogRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBlogRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "blog has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BlogResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blog/{blog}": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get blog information",
                "description": "Returns blog data",
                "operationId": "getBlogByID",
                "parameters": [
                    {
                        "name": "blog",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BlogDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Blog"
                ],
                "summary": "Update existing blog",
                "description": "Returns updated blog data",
                "operationId": "updateBlog",
                "parameters": [
                    {
                        "name": "blog",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBlogRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBlogRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "blog has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BlogResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Blog"
                ],
                "summary": "Delete existing blog",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteBlog",
                "parameters": [
                    {
                        "name": "blog",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "blog has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blog/toggle/{blog}": {
            "post": {
                "tags": [
                    "Blog"
                ],
                "summary": "Toggle Blog",
                "operationId": "toggleBlog",
                "parameters": [
                    {
                        "name": "blog",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "blog has been toggled successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BlogResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blog/data": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Get Blog data",
                "description": "Returns Blog data",
                "operationId": "getBlogData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/board": {
            "get": {
                "tags": [
                    "Board"
                ],
                "summary": "get boards list",
                "description": "Returns list of boards",
                "operationId": "getBoards",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BoardResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/board?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/board?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/board?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Board"
                ],
                "summary": "Store new board",
                "description": "Returns new board data",
                "operationId": "storeBoard",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBoardRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBoardRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "board has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BoardResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/board/{board}": {
            "get": {
                "tags": [
                    "Board"
                ],
                "summary": "Get board information",
                "description": "Returns board data",
                "operationId": "getBoardByID",
                "parameters": [
                    {
                        "name": "board",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BoardDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Board"
                ],
                "summary": "Update existing board",
                "description": "Returns updated board data",
                "operationId": "updateBoard",
                "parameters": [
                    {
                        "name": "board",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBoardRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBoardRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "board has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BoardResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Board"
                ],
                "summary": "Delete existing board",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteBoard",
                "parameters": [
                    {
                        "name": "board",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "board has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/card": {
            "get": {
                "tags": [
                    "Card"
                ],
                "summary": "get cards list",
                "description": "Returns list of cards",
                "operationId": "getCards",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CardResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/card?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/card?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/card?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Card"
                ],
                "summary": "Store new card",
                "description": "Returns new card data",
                "operationId": "storeCard",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCardRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCardRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "card has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CardResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/card/{card}": {
            "get": {
                "tags": [
                    "Card"
                ],
                "summary": "Get card information",
                "description": "Returns card data",
                "operationId": "getCardByID",
                "parameters": [
                    {
                        "name": "card",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CardDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Card"
                ],
                "summary": "Update existing card",
                "description": "Returns updated card data",
                "operationId": "updateCard",
                "parameters": [
                    {
                        "name": "card",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCardRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCardRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "card has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CardResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Card"
                ],
                "summary": "Delete existing card",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCard",
                "parameters": [
                    {
                        "name": "card",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "card has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/card-flow": {
            "get": {
                "tags": [
                    "CardFlow"
                ],
                "summary": "get cardFlows list",
                "description": "Returns list of cardFlows",
                "operationId": "getCardFlows",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CardFlowResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/card-flow?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/card-flow?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/card-flow?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CardFlow"
                ],
                "summary": "Store new cardFlow",
                "description": "Returns new cardFlow data",
                "operationId": "storeCardFlow",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCardFlowRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCardFlowRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "card-flow has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CardFlowResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/card-flow/{cardFlow}": {
            "get": {
                "tags": [
                    "CardFlow"
                ],
                "summary": "Get cardFlow information",
                "description": "Returns cardFlow data",
                "operationId": "getCardFlowByID",
                "parameters": [
                    {
                        "name": "cardFlow",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CardFlowDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CardFlow"
                ],
                "summary": "Update existing cardFlow",
                "description": "Returns updated cardFlow data",
                "operationId": "updateCardFlow",
                "parameters": [
                    {
                        "name": "cardFlow",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCardFlowRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCardFlowRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "card-flow has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CardFlowResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CardFlow"
                ],
                "summary": "Delete existing cardFlow",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCardFlow",
                "parameters": [
                    {
                        "name": "cardFlow",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "card-flow has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/category": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "get categorys list",
                "description": "Returns list of categorys",
                "operationId": "getCategorys",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/category?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/category?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/category?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Store new category",
                "description": "Returns new category data",
                "operationId": "storeCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCategoryRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "category has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/category/{category}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get category information",
                "description": "Returns category data",
                "operationId": "getCategoryByID",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update existing category",
                "description": "Returns updated category data",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategoryRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "category has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete existing category",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "category has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/category/toggle/{category}": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Toggle Category",
                "operationId": "toggleCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "category has been toggled successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/category/data": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get Category data",
                "description": "Returns Category data",
                "operationId": "getCategoryData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/client": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "get clients list",
                "description": "Returns list of clients",
                "operationId": "getClients",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ClientResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/client?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/client?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/client?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Client"
                ],
                "summary": "Store new client",
                "description": "Returns new client data",
                "operationId": "storeClient",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreClientRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreClientRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "client has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ClientResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/client/{client}": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Get client information",
                "description": "Returns client data",
                "operationId": "getClientByID",
                "parameters": [
                    {
                        "name": "client",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ClientDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Client"
                ],
                "summary": "Update existing client",
                "description": "Returns updated client data",
                "operationId": "updateClient",
                "parameters": [
                    {
                        "name": "client",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateClientRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateClientRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "client has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ClientResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Client"
                ],
                "summary": "Delete existing client",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteClient",
                "parameters": [
                    {
                        "name": "client",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "client has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/client/toggle/{client}": {
            "post": {
                "tags": [
                    "Client"
                ],
                "summary": "Toggle Client",
                "operationId": "toggleClient",
                "parameters": [
                    {
                        "name": "client",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "client has been toggled successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ClientResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comment": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "get comments list",
                "description": "Returns list of comments",
                "operationId": "getComments",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CommentResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/comment?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/comment?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/comment?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Store new comment",
                "description": "Returns new comment data",
                "operationId": "storeComment",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCommentRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCommentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "comment has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CommentResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comment/{comment}": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get comment information",
                "description": "Returns comment data",
                "operationId": "getCommentByID",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CommentDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update existing comment",
                "description": "Returns updated comment data",
                "operationId": "updateComment",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCommentRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCommentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "comment has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CommentResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Delete existing comment",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "comment has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contact-us": {
            "get": {
                "tags": [
                    "ContactUs"
                ],
                "summary": "get contactUss list",
                "description": "Returns list of contactUss",
                "operationId": "getContactUss",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ContactUsResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/contact-us?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/contact-us?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/contact-us?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ContactUs"
                ],
                "summary": "Store new contactUs",
                "description": "Returns new contactUs data",
                "operationId": "storeContactUs",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreContactUsRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreContactUsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "contact-us has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ContactUsResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contact-us/{contactUs}": {
            "get": {
                "tags": [
                    "ContactUs"
                ],
                "summary": "Get contactUs information",
                "description": "Returns contactUs data",
                "operationId": "getContactUsByID",
                "parameters": [
                    {
                        "name": "contactUs",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ContactUsDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ContactUs"
                ],
                "summary": "Update existing contactUs",
                "description": "Returns updated contactUs data",
                "operationId": "updateContactUs",
                "parameters": [
                    {
                        "name": "contactUs",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContactUsRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateContactUsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "contact-us has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/ContactUsResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ContactUs"
                ],
                "summary": "Delete existing contactUs",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteContactUs",
                "parameters": [
                    {
                        "name": "contactUs",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "contact-us has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faq": {
            "get": {
                "tags": [
                    "Faq"
                ],
                "summary": "get faqs list",
                "description": "Returns list of faqs",
                "operationId": "getFaqs",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FaqResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/faq?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/faq?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/faq?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Faq"
                ],
                "summary": "Store new faq",
                "description": "Returns new faq data",
                "operationId": "storeFaq",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreFaqRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreFaqRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "faq has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FaqResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faq/{faq}": {
            "get": {
                "tags": [
                    "Faq"
                ],
                "summary": "Get faq information",
                "description": "Returns faq data",
                "operationId": "getFaqByID",
                "parameters": [
                    {
                        "name": "faq",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FaqDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Faq"
                ],
                "summary": "Update existing faq",
                "description": "Returns updated faq data",
                "operationId": "updateFaq",
                "parameters": [
                    {
                        "name": "faq",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFaqRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFaqRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "faq has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FaqResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Faq"
                ],
                "summary": "Delete existing faq",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteFaq",
                "parameters": [
                    {
                        "name": "faq",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "faq has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faq/toggle/{faq}": {
            "post": {
                "tags": [
                    "Faq"
                ],
                "summary": "Toggle Faq",
                "operationId": "toggleFaq",
                "parameters": [
                    {
                        "name": "faq",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "faq has been toggled successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/FaqResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opinion": {
            "get": {
                "tags": [
                    "Opinion"
                ],
                "summary": "get opinions list",
                "description": "Returns list of opinions",
                "operationId": "getOpinions",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/OpinionResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/opinion?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/opinion?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/opinion?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Opinion"
                ],
                "summary": "Store new opinion",
                "description": "Returns new opinion data",
                "operationId": "storeOpinion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOpinionRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOpinionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "opinion has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/OpinionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opinion/{opinion}": {
            "get": {
                "tags": [
                    "Opinion"
                ],
                "summary": "Get opinion information",
                "description": "Returns opinion data",
                "operationId": "getOpinionByID",
                "parameters": [
                    {
                        "name": "opinion",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/OpinionDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Opinion"
                ],
                "summary": "Update existing opinion",
                "description": "Returns updated opinion data",
                "operationId": "updateOpinion",
                "parameters": [
                    {
                        "name": "opinion",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOpinionRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOpinionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "opinion has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/OpinionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Opinion"
                ],
                "summary": "Delete existing opinion",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteOpinion",
                "parameters": [
                    {
                        "name": "opinion",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "opinion has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opinion/toggle/{opinion}": {
            "post": {
                "tags": [
                    "Opinion"
                ],
                "summary": "Toggle Opinion",
                "operationId": "toggleOpinion",
                "parameters": [
                    {
                        "name": "opinion",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "opinion has been toggled successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/OpinionResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/page": {
            "get": {
                "tags": [
                    "Page"
                ],
                "summary": "get pages list",
                "description": "Returns list of pages",
                "operationId": "getPages",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PageResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/page?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/page?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/page?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Page"
                ],
                "summary": "Store new page",
                "description": "Returns new page data",
                "operationId": "storePage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePageRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "page has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PageResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/page/{page}": {
            "get": {
                "tags": [
                    "Page"
                ],
                "summary": "Get page information",
                "description": "Returns page data",
                "operationId": "getPageByID",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PageDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Page"
                ],
                "summary": "Update existing page",
                "description": "Returns updated page data",
                "operationId": "updatePage",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePageRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "page has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PageResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Page"
                ],
                "summary": "Delete existing page",
                "description": "Deletes a record and returns no content",
                "operationId": "deletePage",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "page has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/portfolio": {
            "get": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "get portfolios list",
                "description": "Returns list of portfolios",
                "operationId": "getPortfolios",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PortfolioResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/portfolio?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/portfolio?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/portfolio?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Store new portfolio",
                "description": "Returns new portfolio data",
                "operationId": "storePortfolio",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePortfolioRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorePortfolioRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "portfolio has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PortfolioResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/portfolio/{portfolio}": {
            "get": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Get portfolio information",
                "description": "Returns portfolio data",
                "operationId": "getPortfolioByID",
                "parameters": [
                    {
                        "name": "portfolio",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PortfolioDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Update existing portfolio",
                "description": "Returns updated portfolio data",
                "operationId": "updatePortfolio",
                "parameters": [
                    {
                        "name": "portfolio",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePortfolioRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePortfolioRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "portfolio has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/PortfolioResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Delete existing portfolio",
                "description": "Deletes a record and returns no content",
                "operationId": "deletePortfolio",
                "parameters": [
                    {
                        "name": "portfolio",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "portfolio has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/role": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "get roles list",
                "description": "Returns list of roles",
                "operationId": "getRoles",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RoleResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/role?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/role?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/role?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Store new role",
                "description": "Returns new role data",
                "operationId": "storeRole",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreRoleRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreRoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "role has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/role/{role}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get role information",
                "description": "Returns role data",
                "operationId": "getRoleByID",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/RoleDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Role"
                ],
                "summary": "Update existing role",
                "description": "Returns updated role data",
                "operationId": "updateRole",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRoleRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "role has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/RoleResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Role"
                ],
                "summary": "Delete existing role",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteRole",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "role has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slider": {
            "get": {
                "tags": [
                    "Slider"
                ],
                "summary": "get sliders list",
                "description": "Returns list of sliders",
                "operationId": "getSliders",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SliderResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/slider?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/slider?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/slider?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Slider"
                ],
                "summary": "Store new slider",
                "description": "Returns new slider data",
                "operationId": "storeSlider",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSliderRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSliderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "slider has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SliderResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/slider/{slider}": {
            "get": {
                "tags": [
                    "Slider"
                ],
                "summary": "Get slider information",
                "description": "Returns slider data",
                "operationId": "getSliderByID",
                "parameters": [
                    {
                        "name": "slider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SliderDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Slider"
                ],
                "summary": "Update existing slider",
                "description": "Returns updated slider data",
                "operationId": "updateSlider",
                "parameters": [
                    {
                        "name": "slider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSliderRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSliderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "slider has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SliderResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Slider"
                ],
                "summary": "Delete existing slider",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteSlider",
                "parameters": [
                    {
                        "name": "slider",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "slider has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/social-media": {
            "get": {
                "tags": [
                    "SocialMedia"
                ],
                "summary": "get socialMedias list",
                "description": "Returns list of socialMedias",
                "operationId": "getSocialMedias",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SocialMediaResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/social-media?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/social-media?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/social-media?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SocialMedia"
                ],
                "summary": "Store new socialMedia",
                "description": "Returns new socialMedia data",
                "operationId": "storeSocialMedia",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSocialMediaRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSocialMediaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "social-media has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SocialMediaResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/social-media/{socialMedia}": {
            "get": {
                "tags": [
                    "SocialMedia"
                ],
                "summary": "Get socialMedia information",
                "description": "Returns socialMedia data",
                "operationId": "getSocialMediaByID",
                "parameters": [
                    {
                        "name": "socialMedia",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SocialMediaDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SocialMedia"
                ],
                "summary": "Update existing socialMedia",
                "description": "Returns updated socialMedia data",
                "operationId": "updateSocialMedia",
                "parameters": [
                    {
                        "name": "socialMedia",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSocialMediaRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSocialMediaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "social-media has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SocialMediaResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SocialMedia"
                ],
                "summary": "Delete existing socialMedia",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteSocialMedia",
                "parameters": [
                    {
                        "name": "socialMedia",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "social-media has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/social-media/toggle/{socialMedia}": {
            "post": {
                "tags": [
                    "SocialMedia"
                ],
                "summary": "Toggle SocialMedia",
                "operationId": "toggleSocialMedia",
                "parameters": [
                    {
                        "name": "socialMedia",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "social-media has been toggled successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SocialMediaResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/social-media/data": {
            "get": {
                "tags": [
                    "SocialMedia"
                ],
                "summary": "Get SocialMedia data",
                "description": "Returns SocialMedia data",
                "operationId": "getSocialMediaData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/splash": {
            "get": {
                "tags": [
                    "Splash"
                ],
                "summary": "splash",
                "description": "Returns splash",
                "operationId": "splashAdmin",
                "parameters": [
                    {
                        "name": "browser",
                        "in": "query",
                        "description": "Browser name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "chrome",
                            "enum": [
                                "chrome",
                                "firefox",
                                "safari",
                                "edge",
                                "opera",
                                "ie",
                                "other"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "example message"
                                        },
                                        "data": {
                                            "properties": {
                                                "version": {
                                                    "type": "string",
                                                    "default": "1.0.0"
                                                },
                                                "supported_locales": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "label": {
                                                                "type": "string",
                                                                "default": "English"
                                                            },
                                                            "value": {
                                                                "type": "string",
                                                                "default": "en"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/UserDetailResource"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "default": "Admin"
                                                    }
                                                },
                                                "permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "default": "Shared.Admin"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tag": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "get tags list",
                "description": "Returns list of tags",
                "operationId": "getTags",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TagResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/tag?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/tag?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/tag?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tag"
                ],
                "summary": "Store new tag",
                "description": "Returns new tag data",
                "operationId": "storeTag",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTagRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTagRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "tag has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TagResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tag/{tag}": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get tag information",
                "description": "Returns tag data",
                "operationId": "getTagByID",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TagDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tag"
                ],
                "summary": "Update existing tag",
                "description": "Returns updated tag data",
                "operationId": "updateTag",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTagRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTagRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "tag has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TagResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tag"
                ],
                "summary": "Delete existing tag",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteTag",
                "parameters": [
                    {
                        "name": "tag",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "tag has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tag/data": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get Tag data",
                "description": "Returns Tag data",
                "operationId": "getTagData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/teammate": {
            "get": {
                "tags": [
                    "Teammate"
                ],
                "summary": "get teammates list",
                "description": "Returns list of teammates",
                "operationId": "getTeammates",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TeammateResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/teammate?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/teammate?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/teammate?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Teammate"
                ],
                "summary": "Store new teammate",
                "description": "Returns new teammate data",
                "operationId": "storeTeammate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTeammateRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTeammateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "teammate has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TeammateResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/teammate/{teammate}": {
            "get": {
                "tags": [
                    "Teammate"
                ],
                "summary": "Get teammate information",
                "description": "Returns teammate data",
                "operationId": "getTeammateByID",
                "parameters": [
                    {
                        "name": "teammate",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TeammateDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Teammate"
                ],
                "summary": "Update existing teammate",
                "description": "Returns updated teammate data",
                "operationId": "updateTeammate",
                "parameters": [
                    {
                        "name": "teammate",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTeammateRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTeammateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "teammate has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TeammateResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Teammate"
                ],
                "summary": "Delete existing teammate",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteTeammate",
                "parameters": [
                    {
                        "name": "teammate",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "teammate has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/teammate/toggle/{teammate}": {
            "post": {
                "tags": [
                    "Teammate"
                ],
                "summary": "Toggle Teammate",
                "operationId": "toggleTeammate",
                "parameters": [
                    {
                        "name": "teammate",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "teammate has been toggled successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TeammateResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticket": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "get tickets list",
                "description": "Returns list of tickets",
                "operationId": "getTickets",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TicketResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/ticket?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/ticket?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/ticket?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Store new ticket",
                "description": "Returns new ticket data",
                "operationId": "storeTicket",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTicketRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTicketRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "ticket has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticket/{ticket}": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Get ticket information",
                "description": "Returns ticket data",
                "operationId": "getTicketByID",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Update existing ticket",
                "description": "Returns updated ticket data",
                "operationId": "updateTicket",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTicketRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTicketRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "ticket has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Delete existing ticket",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteTicket",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "ticket has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticket/toggle/{ticket}": {
            "post": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Toggle Ticket",
                "operationId": "toggleTicket",
                "parameters": [
                    {
                        "name": "ticket",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "ticket has been toggled successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticket/data": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Get Ticket data",
                "description": "Returns Ticket data",
                "operationId": "getTicketData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/UserResource"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticket-message": {
            "get": {
                "tags": [
                    "TicketMessage"
                ],
                "summary": "get ticketMessages list",
                "description": "Returns list of ticketMessages",
                "operationId": "getTicketMessages",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TicketMessageResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/ticket-message?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/ticket-message?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/ticket-message?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TicketMessage"
                ],
                "summary": "Store new ticketMessage",
                "description": "Returns new ticketMessage data",
                "operationId": "storeTicketMessage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTicketMessageRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTicketMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "ticket-message has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketMessageResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticket-message/{ticketMessage}": {
            "get": {
                "tags": [
                    "TicketMessage"
                ],
                "summary": "Get ticketMessage information",
                "description": "Returns ticketMessage data",
                "operationId": "getTicketMessageByID",
                "parameters": [
                    {
                        "name": "ticketMessage",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketMessageDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "TicketMessage"
                ],
                "summary": "Update existing ticketMessage",
                "description": "Returns updated ticketMessage data",
                "operationId": "updateTicketMessage",
                "parameters": [
                    {
                        "name": "ticketMessage",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTicketMessageRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTicketMessageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "ticket-message has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TicketMessageResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "TicketMessage"
                ],
                "summary": "Delete existing ticketMessage",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteTicketMessage",
                "parameters": [
                    {
                        "name": "ticketMessage",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "ticket-message has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "get users list",
                "description": "Returns list of users",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/advanced_search"
                    },
                    {
                        "$ref": "#/components/parameters/sort"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserResource"
                                            }
                                        },
                                        "links": {
                                            "properties": {
                                                "first": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/user?page=1"
                                                },
                                                "last": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/user?page=4"
                                                },
                                                "prev": {
                                                    "type": "string",
                                                    "default": "null",
                                                    "nullable": true
                                                },
                                                "next": {
                                                    "type": "string",
                                                    "default": "http://localhost/api/user?page=2",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "meta": {
                                            "$ref": "#/components/schemas/Meta"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "advance_search_field": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "key": {
                                                        "type": "string",
                                                        "default": "id"
                                                    },
                                                    "label": {
                                                        "type": "string",
                                                        "default": "text"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "default": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "extra": {
                                            "properties": {
                                                "default_sort": {
                                                    "type": "string",
                                                    "default": "-id"
                                                },
                                                "sorts": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "default": [
                                                        "id",
                                                        "created_at",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Store new user",
                "description": "Returns new user data",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "user has been stored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{user}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getUserByID",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserDetailResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update existing user",
                "description": "Returns updated user data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "user has been updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete existing user",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "boolean",
                                            "default": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "user has been deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/utility/select/{model}": {
            "get": {
                "tags": [
                    "Utility"
                ],
                "summary": "for use in select box",
                "description": "\n     *     `locker`: available=available= lockers where dosen't have active entry(can assign to new user) | available=unavailable= lockers where have active entry (cannot assign to new user) </br></br>\n     *     `wallet`: type=user= wallets where type is user | type=locker= wallets where type is locker </br></br>",
                "operationId": "selectByModel",
                "parameters": [
                    {
                        "name": "model",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "user",
                            "enum": [
                                "user"
                            ]
                        }
                    },
                    {
                        "name": "options",
                        "in": "query",
                        "description": "you must send as query param param1=1&param2=2 </br>\n     *      `category`:shop_id:int </br></br>\n     *      `wallet`:type=user|locker|contract|organization,charge:1|0,available=available|unavailable,user_id=int",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        },
                        "examples": {
                            "Default": {
                                "summary": "",
                                "value": ""
                            },
                            "search available locker for enter user": {
                                "summary": "",
                                "value": "available=available&locker_group_id=1"
                            },
                            "search unavailable locker for exist user": {
                                "summary": "",
                                "value": "available=unavailable&locker_group_id=1"
                            },
                            "list of categories of a shop": {
                                "summary": "",
                                "value": "shop_id=1"
                            },
                            "lockers in use with charge": {
                                "summary": "",
                                "value": "available=unavailable&charge=1"
                            },
                            "wallet with type:user|locker|contract|organization": {
                                "summary": "",
                                "value": "type=user"
                            },
                            "wallet with type locker can use for product or service payments": {
                                "summary": "",
                                "value": "type=locker&available=unavailable"
                            },
                            "wallet with type locker for user_id=2": {
                                "summary": "",
                                "value": "type=locker&available=unavailable&user_id=2"
                            }
                        }
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "parameter": "sort",
                        "name": "sort",
                        "in": "query",
                        "description": "Sort the results by field. Use '-' for descending order. Example:-id",
                        "required": false
                    },
                    {
                        "$ref": "#/components/parameters/page_limit"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "default": "No message"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "value": {
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BooleanEnum": {
                "properties": {
                    "value": {
                        "type": "boolean",
                        "default": 1,
                        "enum": [
                            1,
                            0
                        ]
                    },
                    "label": {
                        "type": "string",
                        "default": "Enable"
                    },
                    "color": {
                        "type": "string",
                        "default": "success"
                    }
                },
                "type": "object"
            },
            "BannerSizeEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "1x1",
                            "16x9",
                            "4x3"
                        ]
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CardStatusEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "active",
                            "completed",
                            "archived"
                        ]
                    },
                    "label": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CardTypeEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "note",
                            "task",
                            "bug",
                            "feature",
                            "call",
                            "meeting",
                            "email",
                            "other"
                        ]
                    },
                    "label": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CategoryTypeEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "blog",
                            "portfolio",
                            "faq"
                        ]
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CommentTypeEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "normal",
                            "special"
                        ]
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "GenderEnum": {
                "properties": {
                    "value": {
                        "type": "integer",
                        "enum": [
                            0,
                            1
                        ]
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "NoificationTypeEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "auth_register",
                            "auth_confirm",
                            "auth_forgot_password",
                            "auth_welcome"
                        ]
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PageTypeEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "rules",
                            "about-us"
                        ]
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "PriorityEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high",
                            "urgent"
                        ]
                    },
                    "label": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "RoleEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "developer",
                            "admin"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SeoRobotsMetaEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "index_follow",
                            "noindex_nofollow",
                            "noindex_follow"
                        ]
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SettingEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "product",
                            "general",
                            "integration_sync",
                            "notification",
                            "sale",
                            "security"
                        ]
                    },
                    "label": {
                        "type": "string"
                    },
                    "help": {
                        "type": "string"
                    },
                    "hint": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SliderPositionEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "top",
                            "middle",
                            "bottom"
                        ]
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SocialMediaPositionEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "all",
                            "header",
                            "footer"
                        ]
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TagTypeEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "special"
                        ]
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TicketDepartmentEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "finance_and_administration",
                            "Sale",
                            "technical"
                        ]
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TicketPriorityEnum": {
                "properties": {
                    "value": {
                        "type": "integer",
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ]
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TicketStatusEnum": {
                "properties": {
                    "value": {
                        "type": "string",
                        "enum": [
                            "open",
                            "close"
                        ]
                    },
                    "label": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "YesNoEnum": {
                "properties": {
                    "value": {
                        "type": "boolean",
                        "default": 1,
                        "enum": [
                            1,
                            0
                        ]
                    },
                    "label": {
                        "type": "string"
                    },
                    "color": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Meta": {
                "title": "Pagination",
                "properties": {
                    "current_page": {
                        "description": "Current page number",
                        "type": "integer",
                        "default": 1
                    },
                    "from": {
                        "description": "First page number",
                        "type": "integer",
                        "default": 1
                    },
                    "last_page": {
                        "description": "Last page number",
                        "type": "integer",
                        "default": 3
                    },
                    "links": {
                        "description": "Links of pages",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "description": "Url of page",
                                    "type": "string",
                                    "default": "http://localhost:8000/api/shift?page=1"
                                },
                                "label": {
                                    "description": "Label of page",
                                    "type": "string",
                                    "default": "1"
                                },
                                "active": {
                                    "description": "this page is active or not",
                                    "type": "boolean",
                                    "default": true
                                }
                            },
                            "type": "object"
                        },
                        "default": [
                            {
                                "url": null,
                                "label": "&laquo; Previous",
                                "active": false
                            },
                            {
                                "url": "http://localhost:8000/api/category?page=1",
                                "label": "1",
                                "active": true
                            },
                            {
                                "url": "http://localhost:8000/api/category?page=2",
                                "label": "2",
                                "active": false
                            },
                            {
                                "url": "http://127.0.0.1:8000/api/category?page=3",
                                "label": "3",
                                "active": false
                            },
                            {
                                "url": "http://localhost:8000/api/category?page=2",
                                "label": "Next &raquo;",
                                "active": false
                            }
                        ]
                    },
                    "path": {
                        "description": "Base url path",
                        "type": "string",
                        "default": "http://localhost:8000/api/category"
                    },
                    "per_page": {
                        "description": "Number of items per page",
                        "type": "integer",
                        "default": 15
                    },
                    "to": {
                        "description": "Last page number",
                        "type": "integer",
                        "default": 10
                    },
                    "total": {
                        "description": "number of records",
                        "type": "integer",
                        "default": 50
                    }
                },
                "type": "object"
            },
            "Pagination": {
                "title": "Pagination",
                "properties": {
                    "message": {
                        "type": "string",
                        "default": "example message"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "title": "LoginRequest",
                "description": "Login request",
                "required": [
                    "mobile",
                    "password"
                ],
                "properties": {
                    "mobile": {
                        "description": "Email",
                        "type": "string",
                        "default": "09100000000"
                    },
                    "password": {
                        "description": "Password",
                        "type": "string",
                        "default": "password"
                    }
                },
                "type": "object"
            },
            "StoreBannerRequest": {
                "title": "Store Banner request",
                "required": [
                    "title",
                    "published",
                    "size",
                    "image"
                ],
                "properties": {
                    "title": {
                        "description": "Banner title",
                        "type": "string",
                        "default": "test title"
                    },
                    "description": {
                        "description": "Banner description",
                        "type": "string",
                        "default": "test description"
                    },
                    "size": {
                        "$ref": "#/components/schemas/BannerSizeEnum"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "published_at": {
                        "description": "Publication date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "image": {
                        "description": "Banner image file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StoreBlogRequest": {
                "title": "Store Blog request",
                "required": [
                    "title",
                    "description",
                    "published",
                    "category_id",
                    "slug",
                    "seo_title",
                    "seo_description",
                    "robots_meta"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "default": "test title"
                    },
                    "description": {
                        "type": "string",
                        "default": "test description"
                    },
                    "body": {
                        "type": "string",
                        "default": "test body"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "published_at": {
                        "type": "string",
                        "format": "date-time",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "category_id": {
                        "type": "integer",
                        "default": 1
                    },
                    "slug": {
                        "type": "string",
                        "default": "test-slug"
                    },
                    "seo_title": {
                        "type": "string",
                        "default": "test seo title"
                    },
                    "seo_description": {
                        "type": "string",
                        "default": "test seo description"
                    },
                    "canonical": {
                        "type": "string",
                        "default": "https://example.com"
                    },
                    "old_url": {
                        "type": "string",
                        "default": "https://example.com/old"
                    },
                    "redirect_to": {
                        "type": "string",
                        "default": "https://example.com/new"
                    },
                    "robots_meta": {
                        "type": "string",
                        "default": "index_follow",
                        "enum": [
                            "index_follow",
                            "noindex_nofollow",
                            "noindex_follow"
                        ]
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "tag1",
                            "tag2"
                        ]
                    },
                    "image": {
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StoreBoardRequest": {
                "title": "Store Board request",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "description": "Board title",
                        "type": "string",
                        "default": "test title"
                    },
                    "description": {
                        "description": "Board description",
                        "type": "string",
                        "default": "test description"
                    }
                },
                "type": "object"
            },
            "StoreCardFlowRequest": {
                "title": "Store CardFlow request",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "description": "CardFlow title",
                        "type": "string",
                        "default": "test title"
                    },
                    "description": {
                        "description": "CardFlow description",
                        "type": "string",
                        "default": "test description"
                    }
                },
                "type": "object"
            },
            "StoreCardRequest": {
                "title": "Store Card request",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "description": "Card title",
                        "type": "string",
                        "default": "test title"
                    },
                    "description": {
                        "description": "Card description",
                        "type": "string",
                        "default": "test description"
                    }
                },
                "type": "object"
            },
            "StoreCategoryRequest": {
                "title": "Store Category request",
                "required": [
                    "title",
                    "published",
                    "slug",
                    "type",
                    "seo_title",
                    "seo_description",
                    "robots_meta"
                ],
                "properties": {
                    "title": {
                        "description": "Category title",
                        "type": "string",
                        "default": "test title"
                    },
                    "description": {
                        "description": "Category description",
                        "type": "string",
                        "default": "test description"
                    },
                    "body": {
                        "description": "Category body content",
                        "type": "string",
                        "default": "test body"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "parent_id": {
                        "description": "Parent category ID",
                        "type": "integer"
                    },
                    "type": {
                        "$ref": "#/components/schemas/CategoryTypeEnum"
                    },
                    "ordering": {
                        "description": "Category order",
                        "type": "integer",
                        "default": 0
                    },
                    "slug": {
                        "description": "Category slug",
                        "type": "string",
                        "default": "test-slug"
                    },
                    "seo_title": {
                        "description": "SEO title",
                        "type": "string",
                        "default": "test seo title"
                    },
                    "seo_description": {
                        "description": "SEO description",
                        "type": "string",
                        "default": "test seo description"
                    },
                    "canonical": {
                        "description": "Canonical URL",
                        "type": "string",
                        "default": "https://example.com"
                    },
                    "old_url": {
                        "description": "Old URL for redirect",
                        "type": "string",
                        "default": "https://example.com/old"
                    },
                    "redirect_to": {
                        "description": "Redirect target URL",
                        "type": "string",
                        "default": "https://example.com/new"
                    },
                    "robots_meta": {
                        "description": "Robots meta tag",
                        "type": "string",
                        "default": "index_follow",
                        "enum": [
                            "index_follow",
                            "noindex_nofollow",
                            "noindex_follow"
                        ]
                    },
                    "tags": {
                        "description": "Category tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "tag1",
                            "tag2"
                        ]
                    },
                    "image": {
                        "description": "Category image file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StoreClientRequest": {
                "title": "Store Client request",
                "required": [
                    "title",
                    "published"
                ],
                "properties": {
                    "title": {
                        "description": "Client title",
                        "type": "string",
                        "default": "test title"
                    },
                    "description": {
                        "description": "Client description",
                        "type": "string",
                        "default": "test description"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "link": {
                        "description": "Client website link",
                        "type": "string",
                        "default": "https://example.com"
                    },
                    "image": {
                        "description": "Client logo/image file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StoreCommentRequest": {
                "title": "Store Comment request",
                "required": [
                    "comment",
                    "published"
                ],
                "properties": {
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "parent_id": {
                        "type": "integer",
                        "default": null,
                        "nullable": true
                    },
                    "comment": {
                        "type": "string",
                        "default": "This is a comment"
                    }
                },
                "type": "object"
            },
            "StoreContactUsRequest": {
                "title": "Store ContactUs request",
                "required": [
                    "name",
                    "email",
                    "mobile",
                    "comment"
                ],
                "properties": {
                    "name": {
                        "description": "Contact person name",
                        "type": "string",
                        "default": "John Doe"
                    },
                    "email": {
                        "description": "Contact email address",
                        "type": "string",
                        "format": "email",
                        "default": "john@example.com"
                    },
                    "mobile": {
                        "description": "Contact mobile number",
                        "type": "string",
                        "default": "09123456789"
                    },
                    "comment": {
                        "description": "Contact message/comment",
                        "type": "string",
                        "default": "Hello, I need help with..."
                    }
                },
                "type": "object"
            },
            "StoreFaqRequest": {
                "title": "Store Faq request",
                "required": [
                    "title",
                    "description",
                    "published",
                    "category_id",
                    "favorite"
                ],
                "properties": {
                    "title": {
                        "description": "FAQ title",
                        "type": "string",
                        "default": "Frequently Asked Question"
                    },
                    "description": {
                        "description": "FAQ answer/description",
                        "type": "string",
                        "default": "This is the answer to the question"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "favorite": {
                        "$ref": "#/components/schemas/YesNoEnum"
                    },
                    "ordering": {
                        "description": "FAQ order",
                        "type": "integer",
                        "default": 0
                    },
                    "category_id": {
                        "description": "FAQ category ID",
                        "type": "integer",
                        "default": 1
                    },
                    "published_at": {
                        "description": "Publication date",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StoreOpinionRequest": {
                "title": "Store Opinion request",
                "required": [
                    "user_name",
                    "comment",
                    "published",
                    "ordering"
                ],
                "properties": {
                    "user_name": {
                        "description": "Opinion author name",
                        "type": "string",
                        "default": "John Doe"
                    },
                    "comment": {
                        "description": "Opinion comment/review",
                        "type": "string",
                        "default": "Great service! Highly recommended."
                    },
                    "company": {
                        "description": "Author's company",
                        "type": "string",
                        "default": "ABC Company"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "ordering": {
                        "description": "Opinion order",
                        "type": "integer",
                        "default": 0
                    },
                    "published_at": {
                        "description": "Publication date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "image": {
                        "description": "Author profile image",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StorePageRequest": {
                "title": "Store Page request",
                "required": [
                    "title",
                    "body",
                    "type",
                    "slug",
                    "seo_title",
                    "seo_description",
                    "robots_meta"
                ],
                "properties": {
                    "title": {
                        "description": "Page title",
                        "type": "string",
                        "default": "About Us"
                    },
                    "body": {
                        "description": "Page content body",
                        "type": "string",
                        "default": "<p>Welcome to our company...</p>"
                    },
                    "type": {
                        "description": "Page type",
                        "type": "string",
                        "default": "about-us",
                        "enum": [
                            "rules",
                            "about-us"
                        ]
                    },
                    "slug": {
                        "description": "Page slug/URL",
                        "type": "string",
                        "default": "about-us"
                    },
                    "seo_title": {
                        "description": "SEO title",
                        "type": "string",
                        "default": "About Us - Company Name"
                    },
                    "seo_description": {
                        "description": "SEO description",
                        "type": "string",
                        "default": "Learn more about our company"
                    },
                    "canonical": {
                        "description": "Canonical URL",
                        "type": "string",
                        "default": "https://example.com/about-us"
                    },
                    "old_url": {
                        "description": "Old URL for redirect",
                        "type": "string"
                    },
                    "redirect_to": {
                        "description": "Redirect target URL",
                        "type": "string"
                    },
                    "robots_meta": {
                        "description": "Robots meta tag",
                        "type": "string",
                        "default": "index_follow",
                        "enum": [
                            "index_follow",
                            "noindex_nofollow",
                            "noindex_follow"
                        ]
                    },
                    "image": {
                        "description": "Page featured image",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StorePortfolioRequest": {
                "title": "Store Portfolio request",
                "required": [
                    "title",
                    "published",
                    "execution_date",
                    "category_id"
                ],
                "properties": {
                    "title": {
                        "description": "Portfolio title",
                        "type": "string",
                        "default": "Project Name"
                    },
                    "description": {
                        "description": "Portfolio description",
                        "type": "string",
                        "default": "Project description"
                    },
                    "body": {
                        "description": "Portfolio detailed content",
                        "type": "string",
                        "default": "<p>Detailed project information...</p>"
                    },
                    "published": {
                        "description": "Publication status",
                        "type": "boolean",
                        "default": true
                    },
                    "published_at": {
                        "description": "Publication date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "execution_date": {
                        "description": "Project execution date",
                        "type": "string",
                        "format": "date",
                        "default": "2024-01-01"
                    },
                    "category_id": {
                        "description": "Portfolio category ID",
                        "type": "integer",
                        "default": 1
                    },
                    "creator_id": {
                        "description": "Creator user ID (optional, defaults to current user)",
                        "type": "integer"
                    },
                    "tags": {
                        "description": "Portfolio tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "web",
                            "design"
                        ]
                    },
                    "image": {
                        "description": "Portfolio featured image",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StoreRoleRequest": {
                "title": "Store Role request",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "description": "Role name (unique identifier)",
                        "type": "string",
                        "default": "admin"
                    },
                    "description": {
                        "description": "Role description",
                        "type": "string",
                        "default": "Administrator role"
                    },
                    "permissions": {
                        "description": "Permission IDs to assign to role",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": [
                            1,
                            2,
                            3
                        ]
                    }
                },
                "type": "object"
            },
            "StoreSliderRequest": {
                "title": "Store Slider request",
                "required": [
                    "title",
                    "published",
                    " position",
                    "has_timer",
                    " image"
                ],
                "properties": {
                    "title": {
                        "description": "Slider title",
                        "type": "string",
                        "default": "Slider Title"
                    },
                    "description": {
                        "description": "Slider description",
                        "type": "string",
                        "default": "Slider description"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "ordering": {
                        "description": "Slider order",
                        "type": "integer",
                        "default": 0
                    },
                    "published_at": {
                        "description": "Publication date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "expired_at": {
                        "description": "Expiration date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "link": {
                        "description": "Slider link URL",
                        "type": "string",
                        "default": "https://example.com"
                    },
                    "position": {
                        "$ref": "#/components/schemas/SliderPositionEnum"
                    },
                    "has_timer": {
                        "$ref": "#/components/schemas/YesNoEnum"
                    },
                    "timer_start": {
                        "description": "Timer start date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "image": {
                        "description": "Slider image",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StoreSocialMediaRequest": {
                "title": "Store SocialMedia request",
                "required": [
                    "title",
                    "link",
                    "position",
                    "published",
                    "ordering"
                ],
                "properties": {
                    "title": {
                        "description": "Social media platform title",
                        "type": "string",
                        "default": "Facebook"
                    },
                    "link": {
                        "description": "Social media profile URL",
                        "type": "string",
                        "default": "https://facebook.com/username"
                    },
                    "ordering": {
                        "description": "Display order",
                        "type": "integer",
                        "default": 0
                    },
                    "position": {
                        "$ref": "#/components/schemas/SocialMediaPositionEnum"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "image": {
                        "description": "Social media icon/image",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StoreTagRequest": {
                "title": "Store Tag request",
                "required": [
                    "name",
                    "seo_title",
                    "seo_description",
                    "robots_meta",
                    "slug"
                ],
                "properties": {
                    "name": {
                        "description": "Tag name",
                        "type": "string",
                        "default": "web-development"
                    },
                    "slug": {
                        "type": "string",
                        "default": "test-slug"
                    },
                    "description": {
                        "description": "Tag description",
                        "type": "string",
                        "default": "Web development services"
                    },
                    "body": {
                        "description": "Tag detailed content",
                        "type": "string",
                        "default": "<p>Detailed tag content...</p>"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TagTypeEnum"
                    },
                    "order_column": {
                        "description": "Tag order",
                        "type": "integer",
                        "default": 1
                    },
                    "seo_title": {
                        "description": "SEO title",
                        "type": "string",
                        "default": "Web Development | Company Name"
                    },
                    "seo_description": {
                        "description": "SEO description",
                        "type": "string",
                        "default": "Professional web development services"
                    },
                    "canonical": {
                        "description": "Canonical URL",
                        "type": "string",
                        "default": "https://example.com/tags/web-development"
                    },
                    "old_url": {
                        "description": "Old URL for redirect",
                        "type": "string"
                    },
                    "redirect_to": {
                        "description": "Redirect target URL",
                        "type": "string"
                    },
                    "robots_meta": {
                        "description": "Robots meta tag",
                        "type": "string",
                        "default": "index_follow",
                        "enum": [
                            "index_follow",
                            "noindex_nofollow",
                            "noindex_follow"
                        ]
                    },
                    "image": {
                        "description": "Tag featured image",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StoreTeammateRequest": {
                "title": "Store Teammate request",
                "required": [
                    "title",
                    "position",
                    "published"
                ],
                "properties": {
                    "title": {
                        "description": "Teammate name",
                        "type": "string",
                        "default": "John Doe"
                    },
                    "description": {
                        "description": "Teammate description",
                        "type": "string",
                        "default": "Team member description"
                    },
                    "bio": {
                        "description": "Teammate biography",
                        "type": "string",
                        "default": "Team member biography"
                    },
                    "position": {
                        "description": "Teammate position",
                        "type": "string",
                        "default": "Developer"
                    },
                    "birthday": {
                        "description": "Teammate birthday",
                        "type": "string",
                        "format": "date",
                        "default": "1990-01-01"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "email": {
                        "description": "Teammate email",
                        "type": "string",
                        "format": "email",
                        "default": "teammate@example.com"
                    },
                    "image": {
                        "description": "Teammate profile image",
                        "type": "string",
                        "format": "binary"
                    },
                    "bio_image": {
                        "description": "Teammate bio image",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StoreTicketMessageRequest": {
                "title": "Store TicketMessage request",
                "required": [
                    "ticket_id",
                    "user_id",
                    "message"
                ],
                "properties": {
                    "ticket_id": {
                        "description": "Ticket ID",
                        "type": "integer",
                        "default": 1
                    },
                    "user_id": {
                        "description": "User ID who sends the message",
                        "type": "integer",
                        "default": 1
                    },
                    "message": {
                        "description": "Message content",
                        "type": "string",
                        "default": "Here is my response..."
                    },
                    "file": {
                        "description": "Attachment file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StoreTicketRequest": {
                "title": "Store Ticket request",
                "required": [
                    "subject",
                    "body",
                    "user_id",
                    "department",
                    "priority"
                ],
                "properties": {
                    "subject": {
                        "description": "Ticket subject",
                        "type": "string",
                        "default": "Support Request"
                    },
                    "body": {
                        "description": "Ticket message body",
                        "type": "string",
                        "default": "Please help me with..."
                    },
                    "user_id": {
                        "description": "User ID who creates the ticket",
                        "type": "integer",
                        "default": 1
                    },
                    "department": {
                        "$ref": "#/components/schemas/TicketDepartmentEnum"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/TicketPriorityEnum"
                    },
                    "image": {
                        "description": "Attachment image file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "StoreUserRequest": {
                "title": "Store User request",
                "required": [
                    "name",
                    "family",
                    "email",
                    "password",
                    "status"
                ],
                "properties": {
                    "name": {
                        "description": "User first name",
                        "type": "string",
                        "default": "John"
                    },
                    "family": {
                        "description": "User last name",
                        "type": "string",
                        "default": "Doe"
                    },
                    "email": {
                        "description": "User email address",
                        "type": "string",
                        "format": "email",
                        "default": "john@example.com"
                    },
                    "password": {
                        "description": "User password (minimum 8 characters)",
                        "type": "string",
                        "format": "password",
                        "default": "password"
                    },
                    "status": {
                        "description": "User status (active/inactive)",
                        "type": "boolean",
                        "default": true
                    },
                    "rules": {
                        "description": "User roles",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "admin",
                            "user"
                        ]
                    },
                    "avatar": {
                        "description": "User avatar image file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "UpdateBannerRequest": {
                "title": "Update Banner request",
                "required": [
                    "title",
                    "published",
                    "size",
                    "image"
                ],
                "properties": {
                    "title": {
                        "description": "Banner title",
                        "type": "string",
                        "default": "Updated banner title"
                    },
                    "description": {
                        "description": "Banner description",
                        "type": "string",
                        "default": "Updated banner description"
                    },
                    "published": {
                        "description": "Publication status",
                        "type": "boolean",
                        "default": true
                    },
                    "published_at": {
                        "description": "Publication date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "size": {
                        "$ref": "#/components/schemas/BannerSizeEnum"
                    },
                    "image": {
                        "description": "Banner image file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "UpdateBlogRequest": {
                "title": "Update Blog request",
                "required": [
                    "title",
                    "description",
                    "published",
                    "category_id",
                    "slug",
                    "seo_title",
                    "seo_description",
                    "robots_meta"
                ],
                "properties": {
                    "title": {
                        "description": "Blog title",
                        "type": "string",
                        "default": "Updated blog title"
                    },
                    "description": {
                        "description": "Blog description",
                        "type": "string",
                        "default": "Updated blog description"
                    },
                    "body": {
                        "description": "Blog body content",
                        "type": "string",
                        "default": "Updated blog content"
                    },
                    "published": {
                        "description": "Publication status",
                        "type": "boolean",
                        "default": true
                    },
                    "published_at": {
                        "description": "Publication date",
                        "type": "string",
                        "format": "date-time",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "category_id": {
                        "description": "Blog category ID",
                        "type": "integer",
                        "default": 1
                    },
                    "slug": {
                        "description": "Blog slug/URL",
                        "type": "string",
                        "default": "updated-blog-slug"
                    },
                    "seo_title": {
                        "description": "SEO title",
                        "type": "string",
                        "default": "Updated SEO title"
                    },
                    "seo_description": {
                        "description": "SEO description",
                        "type": "string",
                        "default": "Updated SEO description"
                    },
                    "canonical": {
                        "description": "Canonical URL",
                        "type": "string",
                        "default": "https://example.com"
                    },
                    "old_url": {
                        "description": "Old URL for redirect",
                        "type": "string",
                        "default": "https://example.com/old"
                    },
                    "redirect_to": {
                        "description": "Redirect target URL",
                        "type": "string",
                        "default": "https://example.com/new"
                    },
                    "robots_meta": {
                        "description": "Robots meta tag",
                        "type": "string",
                        "default": "index_follow",
                        "enum": [
                            "index_follow",
                            "noindex_nofollow",
                            "noindex_follow"
                        ]
                    },
                    "tags": {
                        "description": "Blog tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "updated-tag1",
                            "updated-tag2"
                        ]
                    },
                    "image": {
                        "description": "Blog featured image",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "UpdateBoardRequest": {
                "title": "Update Board request",
                "required": [
                    "title"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StoreBoardRequest"
                    },
                    {
                        "properties": {
                            "title": {
                                "description": "Board title",
                                "type": "string",
                                "default": "Updated board title"
                            },
                            "description": {
                                "description": "Board description",
                                "type": "string",
                                "default": "Updated board description"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateCardFlowRequest": {
                "title": "Update CardFlow request",
                "required": [
                    "title"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StoreCardFlowRequest"
                    },
                    {
                        "properties": {
                            "title": {
                                "description": "CardFlow title",
                                "type": "string",
                                "default": "Updated cardflow title"
                            },
                            "description": {
                                "description": "CardFlow description",
                                "type": "string",
                                "default": "Updated cardflow description"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateCardRequest": {
                "title": "Update Card request",
                "required": [
                    "title"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StoreCardRequest"
                    },
                    {
                        "properties": {
                            "title": {
                                "description": "Card title",
                                "type": "string",
                                "default": "Updated card title"
                            },
                            "description": {
                                "description": "Card description",
                                "type": "string",
                                "default": "Updated card description"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateCategoryRequest": {
                "title": "Update Category request",
                "required": [
                    "title",
                    "published",
                    "slug",
                    "type",
                    "seo_title",
                    "seo_description",
                    "robots_meta"
                ],
                "properties": {
                    "title": {
                        "description": "Category title",
                        "type": "string",
                        "default": "Updated category title"
                    },
                    "description": {
                        "description": "Category description",
                        "type": "string",
                        "default": "Updated category description"
                    },
                    "body": {
                        "description": "Category body content",
                        "type": "string",
                        "default": "Updated category body"
                    },
                    "published": {
                        "description": "Publication status",
                        "type": "boolean",
                        "default": true
                    },
                    "parent_id": {
                        "description": "Parent category ID",
                        "type": "integer"
                    },
                    "type": {
                        "description": "Category type",
                        "type": "string",
                        "default": "blog",
                        "enum": [
                            "blog",
                            "portfolio",
                            "faq"
                        ]
                    },
                    "ordering": {
                        "description": "Category order",
                        "type": "integer",
                        "default": 0
                    },
                    "slug": {
                        "description": "Category slug",
                        "type": "string",
                        "default": "updated-slug"
                    },
                    "seo_title": {
                        "description": "SEO title",
                        "type": "string",
                        "default": "Updated SEO title"
                    },
                    "seo_description": {
                        "description": "SEO description",
                        "type": "string",
                        "default": "Updated SEO description"
                    },
                    "canonical": {
                        "description": "Canonical URL",
                        "type": "string",
                        "default": "https://example.com"
                    },
                    "old_url": {
                        "description": "Old URL for redirect",
                        "type": "string",
                        "default": "https://example.com/old"
                    },
                    "redirect_to": {
                        "description": "Redirect target URL",
                        "type": "string",
                        "default": "https://example.com/new"
                    },
                    "robots_meta": {
                        "description": "Robots meta tag",
                        "type": "string",
                        "default": "index_follow",
                        "enum": [
                            "index_follow",
                            "noindex_nofollow",
                            "noindex_follow"
                        ]
                    },
                    "tags": {
                        "description": "Category tags",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "tag1",
                            "tag2"
                        ]
                    },
                    "image": {
                        "description": "Category image file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "UpdateClientRequest": {
                "title": "Update Client request",
                "required": [
                    "title",
                    "published"
                ],
                "properties": {
                    "title": {
                        "description": "Client title",
                        "type": "string",
                        "default": "Updated client title"
                    },
                    "description": {
                        "description": "Client description",
                        "type": "string",
                        "default": "Updated client description"
                    },
                    "published": {
                        "description": "Publication status",
                        "type": "boolean",
                        "default": true
                    },
                    "link": {
                        "description": "Client website link",
                        "type": "string",
                        "default": "https://example.com"
                    },
                    "image": {
                        "description": "Client logo/image file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "UpdateCommentRequest": {
                "title": "Update Comment request",
                "required": [
                    "comment",
                    "published"
                ],
                "properties": {
                    "published": {
                        "type": "boolean",
                        "default": true
                    },
                    "parent_id": {
                        "type": "integer",
                        "default": null,
                        "nullable": true
                    },
                    "comment": {
                        "type": "string",
                        "default": "This is a comment"
                    },
                    "admin_note": {
                        "type": "string",
                        "default": "This is aadmin comment "
                    }
                },
                "type": "object"
            },
            "UpdateContactUsRequest": {
                "title": "Update ContactUs request",
                "required": [
                    "name",
                    "email",
                    "mobile",
                    "comment"
                ],
                "properties": {
                    "name": {
                        "description": "Contact person name",
                        "type": "string",
                        "default": "Jane Doe"
                    },
                    "email": {
                        "description": "Contact email address",
                        "type": "string",
                        "format": "email",
                        "default": "jane@example.com"
                    },
                    "mobile": {
                        "description": "Contact mobile number",
                        "type": "string",
                        "default": "09123456789"
                    },
                    "comment": {
                        "description": "Contact message/comment",
                        "type": "string",
                        "default": "Updated message content"
                    },
                    "admin_note": {
                        "description": "Contact admin message/comment",
                        "type": "string",
                        "default": "Updated message content"
                    },
                    "follow_up": {
                        "$ref": "#/components/schemas/YesNoEnum"
                    }
                },
                "type": "object"
            },
            "UpdateFaqRequest": {
                "title": "Update Faq request",
                "required": [
                    "title",
                    "description",
                    "published",
                    "category_id"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StoreFaqRequest"
                    },
                    {
                        "properties": {
                            "title": {
                                "description": "FAQ title",
                                "type": "string",
                                "default": "Updated FAQ Question"
                            },
                            "description": {
                                "description": "FAQ answer/description",
                                "type": "string",
                                "default": "Updated answer to the question"
                            },
                            "published": {
                                "description": "Publication status",
                                "type": "boolean",
                                "default": true
                            },
                            "favorite": {
                                "description": "Mark as favorite FAQ",
                                "type": "boolean",
                                "default": false
                            },
                            "ordering": {
                                "description": "FAQ order",
                                "type": "integer",
                                "default": 0
                            },
                            "category_id": {
                                "description": "FAQ category ID",
                                "type": "integer",
                                "default": 1
                            },
                            "published_at": {
                                "description": "Publication date",
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateOpinionRequest": {
                "title": "Update Opinion request",
                "required": [
                    "user_name",
                    "comment",
                    "published"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StoreOpinionRequest"
                    },
                    {
                        "properties": {
                            "user_name": {
                                "description": "Opinion author name",
                                "type": "string",
                                "default": "Jane Smith"
                            },
                            "comment": {
                                "description": "Opinion comment/review",
                                "type": "string",
                                "default": "Outstanding service! Updated review."
                            },
                            "company": {
                                "description": "Author's company",
                                "type": "string",
                                "default": "XYZ Corporation"
                            },
                            "published": {
                                "description": "Publication status",
                                "type": "boolean",
                                "default": true
                            },
                            "ordering": {
                                "description": "Opinion order",
                                "type": "integer",
                                "default": 0
                            },
                            "published_at": {
                                "description": "Publication date",
                                "type": "string",
                                "format": "date-time"
                            },
                            "image": {
                                "description": "Author profile image",
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdatePageRequest": {
                "title": "Update Page request",
                "required": [
                    "title",
                    "body",
                    "type",
                    "slug",
                    "seo_title",
                    "seo_description",
                    "robots_meta"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StorePageRequest"
                    },
                    {
                        "properties": {
                            "title": {
                                "description": "Page title",
                                "type": "string",
                                "default": "Updated About Us"
                            },
                            "body": {
                                "description": "Page content body",
                                "type": "string",
                                "default": "<p>Updated content about our company...</p>"
                            },
                            "type": {
                                "description": "Page type",
                                "type": "string",
                                "default": "about-us",
                                "enum": [
                                    "rules",
                                    "about-us"
                                ]
                            },
                            "slug": {
                                "description": "Page slug/URL",
                                "type": "string",
                                "default": "updated-about-us"
                            },
                            "seo_title": {
                                "description": "SEO title",
                                "type": "string",
                                "default": "Updated About Us - Company Name"
                            },
                            "seo_description": {
                                "description": "SEO description",
                                "type": "string",
                                "default": "Learn more about our updated company info"
                            },
                            "canonical": {
                                "description": "Canonical URL",
                                "type": "string",
                                "default": "https://example.com/about-us"
                            },
                            "old_url": {
                                "description": "Old URL for redirect",
                                "type": "string"
                            },
                            "redirect_to": {
                                "description": "Redirect target URL",
                                "type": "string"
                            },
                            "robots_meta": {
                                "description": "Robots meta tag",
                                "type": "string",
                                "default": "index_follow",
                                "enum": [
                                    "index_follow",
                                    "noindex_nofollow",
                                    "noindex_follow"
                                ]
                            },
                            "image": {
                                "description": "Page featured image",
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdatePortfolioRequest": {
                "title": "Update Portfolio request",
                "required": [
                    "title",
                    "published",
                    "execution_date",
                    "category_id"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StorePortfolioRequest"
                    },
                    {
                        "properties": {
                            "title": {
                                "description": "Portfolio title",
                                "type": "string",
                                "default": "Updated Project Name"
                            },
                            "description": {
                                "description": "Portfolio description",
                                "type": "string",
                                "default": "Updated project description"
                            },
                            "body": {
                                "description": "Portfolio detailed content",
                                "type": "string",
                                "default": "<p>Updated detailed project information...</p>"
                            },
                            "published": {
                                "description": "Publication status",
                                "type": "boolean",
                                "default": true
                            },
                            "published_at": {
                                "description": "Publication date",
                                "type": "string",
                                "format": "date-time"
                            },
                            "execution_date": {
                                "description": "Project execution date",
                                "type": "string",
                                "format": "date",
                                "default": "2024-02-01"
                            },
                            "category_id": {
                                "description": "Portfolio category ID",
                                "type": "integer",
                                "default": 1
                            },
                            "creator_id": {
                                "description": "Creator user ID (optional, defaults to current user)",
                                "type": "integer"
                            },
                            "tags": {
                                "description": "Portfolio tags",
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "example": [
                                    "web",
                                    "design",
                                    "updated"
                                ]
                            },
                            "image": {
                                "description": "Portfolio featured image",
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateRoleRequest": {
                "title": "Update Role request",
                "required": [
                    "name"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StoreRoleRequest"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Role name (unique identifier)",
                                "type": "string",
                                "default": "moderator"
                            },
                            "description": {
                                "description": "Role description",
                                "type": "string",
                                "default": "Updated moderator role"
                            },
                            "permissions": {
                                "description": "Permission IDs to assign to role",
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                },
                                "example": [
                                    1,
                                    2,
                                    4
                                ]
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateSliderRequest": {
                "title": "Update Slider request",
                "required": [
                    "title",
                    "published"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StoreSliderRequest"
                    },
                    {
                        "properties": {
                            "title": {
                                "description": "Slider title",
                                "type": "string",
                                "default": "Updated Slider Title"
                            },
                            "description": {
                                "description": "Slider description",
                                "type": "string",
                                "default": "Updated slider description"
                            },
                            "published": {
                                "description": "Publication status",
                                "type": "boolean",
                                "default": true
                            },
                            "ordering": {
                                "description": "Slider order",
                                "type": "integer",
                                "default": 0
                            },
                            "published_at": {
                                "description": "Publication date",
                                "type": "string",
                                "format": "date-time"
                            },
                            "expired_at": {
                                "description": "Expiration date",
                                "type": "string",
                                "format": "date-time"
                            },
                            "link": {
                                "description": "Slider link URL",
                                "type": "string",
                                "default": "https://example.com"
                            },
                            "position": {
                                "description": "Slider position",
                                "type": "string",
                                "default": "top",
                                "enum": [
                                    "top",
                                    "middle",
                                    "bottom"
                                ]
                            },
                            "has_timer": {
                                "description": "Has timer functionality",
                                "type": "boolean",
                                "default": false
                            },
                            "timer_start": {
                                "description": "Timer start date",
                                "type": "string",
                                "format": "date-time"
                            },
                            "image": {
                                "description": "Slider image",
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateSocialMediaRequest": {
                "title": "Update SocialMedia request",
                "required": [
                    "title",
                    "link",
                    "position",
                    "published"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StoreSocialMediaRequest"
                    },
                    {
                        "properties": {
                            "title": {
                                "description": "Social media platform title",
                                "type": "string",
                                "default": "Twitter"
                            },
                            "link": {
                                "description": "Social media profile URL",
                                "type": "string",
                                "default": "https://twitter.com/username"
                            },
                            "ordering": {
                                "description": "Display order",
                                "type": "integer",
                                "default": 0
                            },
                            "position": {
                                "description": "Display position",
                                "type": "string",
                                "default": "all",
                                "enum": [
                                    "all",
                                    "header",
                                    "footer"
                                ]
                            },
                            "published": {
                                "description": "Publication status",
                                "type": "boolean",
                                "default": true
                            },
                            "image": {
                                "description": "Social media icon/image",
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateTagRequest": {
                "title": "Update Tag request",
                "required": [
                    "name",
                    "seo_title",
                    "seo_description",
                    "robots_meta"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StoreTagRequest"
                    },
                    {
                        "properties": {
                            "name": {
                                "description": "Tag name",
                                "type": "string",
                                "default": "mobile-development"
                            },
                            "description": {
                                "description": "Tag description",
                                "type": "string",
                                "default": "Updated mobile development services"
                            },
                            "body": {
                                "description": "Tag detailed content",
                                "type": "string",
                                "default": "<p>Updated detailed tag content...</p>"
                            },
                            "type": {
                                "description": "Tag type",
                                "type": "string",
                                "enum": [
                                    "special"
                                ]
                            },
                            "order_column": {
                                "description": "Tag order",
                                "type": "integer",
                                "default": 1
                            },
                            "seo_title": {
                                "description": "SEO title",
                                "type": "string",
                                "default": "Mobile Development | Company Name"
                            },
                            "seo_description": {
                                "description": "SEO description",
                                "type": "string",
                                "default": "Professional mobile development services"
                            },
                            "canonical": {
                                "description": "Canonical URL",
                                "type": "string",
                                "default": "https://example.com/tags/mobile-development"
                            },
                            "old_url": {
                                "description": "Old URL for redirect",
                                "type": "string"
                            },
                            "redirect_to": {
                                "description": "Redirect target URL",
                                "type": "string"
                            },
                            "robots_meta": {
                                "description": "Robots meta tag",
                                "type": "string",
                                "default": "index_follow",
                                "enum": [
                                    "index_follow",
                                    "noindex_nofollow",
                                    "noindex_follow"
                                ]
                            },
                            "image": {
                                "description": "Tag featured image",
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateTeammateRequest": {
                "title": "Update Teammate request",
                "required": [
                    "title",
                    "position",
                    "published"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StoreTeammateRequest"
                    },
                    {
                        "properties": {
                            "title": {
                                "description": "Teammate name",
                                "type": "string",
                                "default": "Jane Smith"
                            },
                            "description": {
                                "description": "Teammate description",
                                "type": "string",
                                "default": "Updated team member description"
                            },
                            "bio": {
                                "description": "Teammate biography",
                                "type": "string",
                                "default": "Updated team member biography"
                            },
                            "position": {
                                "description": "Teammate position",
                                "type": "string",
                                "default": "Senior Developer"
                            },
                            "birthday": {
                                "description": "Teammate birthday",
                                "type": "string",
                                "format": "date",
                                "default": "1990-01-01"
                            },
                            "published": {
                                "description": "Publication status",
                                "type": "boolean",
                                "default": true
                            },
                            "email": {
                                "description": "Teammate email",
                                "type": "string",
                                "format": "email",
                                "default": "jane@example.com"
                            },
                            "image": {
                                "description": "Teammate profile image",
                                "type": "string",
                                "format": "binary"
                            },
                            "bio_image": {
                                "description": "Teammate bio image",
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateTicketMessageRequest": {
                "title": "Update TicketMessage request",
                "required": [
                    "ticket_id",
                    "user_id",
                    "message"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StoreTicketMessageRequest"
                    },
                    {
                        "properties": {
                            "ticket_id": {
                                "description": "Ticket ID",
                                "type": "integer",
                                "default": 1
                            },
                            "user_id": {
                                "description": "User ID who sends the message",
                                "type": "integer",
                                "default": 1
                            },
                            "message": {
                                "description": "Message content",
                                "type": "string",
                                "default": "Updated response message..."
                            },
                            "file": {
                                "description": "Attachment file",
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateTicketRequest": {
                "title": "Update Ticket request",
                "required": [
                    "subject",
                    "body",
                    "user_id",
                    "department",
                    "priority"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/StoreTicketRequest"
                    },
                    {
                        "properties": {
                            "subject": {
                                "description": "Ticket subject",
                                "type": "string",
                                "default": "Updated Support Request"
                            },
                            "body": {
                                "description": "Ticket message body",
                                "type": "string",
                                "default": "Updated request details..."
                            },
                            "user_id": {
                                "description": "User ID who creates the ticket",
                                "type": "integer",
                                "default": 1
                            },
                            "department": {
                                "description": "Ticket department",
                                "type": "string",
                                "default": "technical",
                                "enum": [
                                    "finance_and_administration",
                                    "Sale",
                                    "technical"
                                ]
                            },
                            "priority": {
                                "description": "Ticket priority (1=Low, 2=Medium, 3=High, 4=Critical)",
                                "type": "integer",
                                "default": 2,
                                "enum": [
                                    1,
                                    2,
                                    3,
                                    4
                                ]
                            },
                            "image": {
                                "description": "Attachment image file",
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UpdateUserRequest": {
                "title": "Update User request",
                "required": [
                    "name",
                    "family",
                    "email",
                    "status"
                ],
                "properties": {
                    "name": {
                        "description": "User first name",
                        "type": "string",
                        "default": "Jane"
                    },
                    "family": {
                        "description": "User last name",
                        "type": "string",
                        "default": "Smith"
                    },
                    "email": {
                        "description": "User email address",
                        "type": "string",
                        "format": "email",
                        "default": "jane@example.com"
                    },
                    "password": {
                        "description": "User password (minimum 8 characters, optional for updates)",
                        "type": "string",
                        "format": "password"
                    },
                    "status": {
                        "description": "User status (active/inactive)",
                        "type": "boolean",
                        "default": true
                    },
                    "rules": {
                        "description": "User roles",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "moderator",
                            "user"
                        ]
                    },
                    "avatar": {
                        "description": "User avatar image file",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "BannerDetailResource": {
                "title": "BannerDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Banner Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Banner Description"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "size": {
                        "$ref": "#/components/schemas/BannerSizeEnum"
                    },
                    "click": {
                        "type": "integer",
                        "default": 1
                    },
                    "published_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "image": {
                        "type": "string",
                        "format": "url",
                        "example": "/media/1/conversions/100_square.jpg"
                    }
                },
                "type": "object"
            },
            "BannerResource": {
                "title": "BannerResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Banner Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Banner Description"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "size": {
                        "$ref": "#/components/schemas/BannerSizeEnum"
                    },
                    "click": {
                        "type": "integer",
                        "default": 1
                    },
                    "published_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "BlogDetailResource": {
                "title": "BlogDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Blog Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Blog Description"
                    },
                    "body": {
                        "type": "string",
                        "default": "Full blog content..."
                    },
                    "slug": {
                        "type": "string",
                        "default": "blog-title"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "published_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "user": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    },
                    "category": {
                        "$ref": "#/components/schemas/SimpleCategoryResource"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimpleTagResource"
                        }
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimpleCommentResource"
                        }
                    },
                    "seo_option": {
                        "type": "object"
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/image.jpg"
                    },
                    "view_count": {
                        "type": "integer",
                        "default": "100"
                    },
                    "comment_count": {
                        "type": "integer",
                        "default": "10"
                    },
                    "wish_count": {
                        "type": "integer",
                        "default": "50"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "BlogResource": {
                "title": "BlogResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Blog Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Blog Description"
                    },
                    "slug": {
                        "type": "string",
                        "default": "blog-title"
                    },
                    "published": {
                        "type": "string",
                        "default": "active"
                    },
                    "published_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "user": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    },
                    "category": {
                        "$ref": "#/components/schemas/SimpleCategoryResource"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimpleTagResource"
                        }
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/image.jpg"
                    },
                    "view_count": {
                        "type": "integer",
                        "default": "100"
                    },
                    "comment_count": {
                        "type": "integer",
                        "default": "10"
                    },
                    "wish_count": {
                        "type": "integer",
                        "default": "50"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "BoardDetailResource": {
                "title": "BoardDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "name": {
                        "type": "string",
                        "default": "Project Alpha"
                    },
                    "description": {
                        "type": "string",
                        "default": "Main project board"
                    },
                    "color": {
                        "type": "string",
                        "default": "#FF5733"
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true
                    },
                    "system_protected": {
                        "type": "boolean",
                        "default": false
                    },
                    "extra_attributes": {
                        "type": "object"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimpleUserResource"
                        }
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "cards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimpleCardResource"
                        }
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "BoardResource": {
                "title": "BoardResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "name": {
                        "type": "string",
                        "default": "Project Alpha"
                    },
                    "description": {
                        "type": "string",
                        "default": "Main project board"
                    },
                    "color": {
                        "type": "string",
                        "default": "#FF5733"
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true
                    },
                    "system_protected": {
                        "type": "boolean",
                        "default": false
                    },
                    "users_count": {
                        "type": "integer",
                        "default": "5"
                    },
                    "cards_count": {
                        "type": "integer",
                        "default": "25"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "CardDetailResource": {
                "title": "CardDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Card Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Card Description"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "CardFlowDetailResource": {
                "title": "CardFlowDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "CardFlow Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "CardFlow Description"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "CardFlowResource": {
                "title": "CardFlowResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "CardFlow Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "CardFlow Description"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "CardResource": {
                "title": "CardResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Fix login bug"
                    },
                    "description": {
                        "type": "string",
                        "default": "Bug in login form"
                    },
                    "card_type": {
                        "type": "string",
                        "default": "task"
                    },
                    "priority": {
                        "type": "string",
                        "default": "high"
                    },
                    "status": {
                        "type": "string",
                        "default": "in_progress"
                    },
                    "due_date": {
                        "type": "string",
                        "nullable": true
                    },
                    "order": {
                        "type": "integer",
                        "default": "1"
                    },
                    "board": {
                        "$ref": "#/components/schemas/SimpleBoardResource"
                    },
                    "column": {
                        "type": "object"
                    },
                    "assignees_count": {
                        "type": "integer",
                        "default": "2"
                    },
                    "is_overdue": {
                        "type": "boolean",
                        "default": false
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "CategoryDetailResource": {
                "title": "CategoryDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Category Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Category Description"
                    },
                    "body": {
                        "type": "string",
                        "default": "Full category content..."
                    },
                    "slug": {
                        "type": "string",
                        "default": "category-title"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "type": {
                        "$ref": "#/components/schemas/CategoryTypeEnum"
                    },
                    "ordering": {
                        "type": "integer",
                        "default": "1"
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "parent": {
                        "$ref": "#/components/schemas/SimpleCategoryResource"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimpleCategoryResource"
                        }
                    },
                    "seo_option": {
                        "type": "object"
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/image.jpg"
                    },
                    "view_count": {
                        "type": "integer",
                        "default": "250"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "CategoryResource": {
                "title": "CategoryResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Category Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Category Description"
                    },
                    "slug": {
                        "type": "string",
                        "default": "category-title"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "type": {
                        "$ref": "#/components/schemas/CategoryTypeEnum"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/SimpleCategoryResource"
                    },
                    "children_count": {
                        "type": "integer",
                        "default": "5"
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/image.jpg"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "ClientDetailResource": {
                "title": "ClientDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Client Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Client Description"
                    },
                    "link": {
                        "type": "string",
                        "default": "https://example.com"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "published_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/storage/clients/image.jpg"
                    }
                },
                "type": "object"
            },
            "ClientResource": {
                "title": "ClientResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Client Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Client Description"
                    },
                    "link": {
                        "type": "string",
                        "default": "https://example.com"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "published_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/storage/clients/image.jpg"
                    }
                },
                "type": "object"
            },
            "CommentDetailResource": {
                "title": "CommentDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "comment": {
                        "type": "string",
                        "default": "Great article!"
                    },
                    "published": {
                        "type": "string",
                        "default": "active"
                    },
                    "rate": {
                        "type": "integer",
                        "default": "5"
                    },
                    "suggest": {
                        "type": "string",
                        "default": "yes"
                    },
                    "admin_note": {
                        "type": "string",
                        "default": "Good feedback"
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "user": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    },
                    "admin": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/SimpleCommentResource"
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimpleCommentResource"
                        }
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "CommentResource": {
                "title": "CommentResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "comment": {
                        "type": "string",
                        "default": "Great article!"
                    },
                    "published": {
                        "type": "string",
                        "default": "active"
                    },
                    "rate": {
                        "type": "integer",
                        "default": "5"
                    },
                    "suggest": {
                        "type": "string",
                        "default": "yes"
                    },
                    "morphable_type": {
                        "type": "string",
                        "default": "App\\\\Models\\\\Blog"
                    },
                    "morphable_id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "user": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    },
                    "admin": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    },
                    "children_count": {
                        "type": "integer",
                        "default": "3"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "ContactUsDetailResource": {
                "title": "ContactUsDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "name": {
                        "type": "string",
                        "default": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "default": "info@example.com"
                    },
                    "mobile": {
                        "type": "string",
                        "default": "+1234567890"
                    },
                    "comment": {
                        "type": "string",
                        "default": "This is a comment."
                    },
                    "admin_note": {
                        "type": "string",
                        "default": "This is an admin note."
                    },
                    "follow_up": {
                        "$ref": "#/components/schemas/YesNoEnum"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "ContactUsResource": {
                "title": "ContactUsResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "name": {
                        "type": "string",
                        "default": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "default": "info@example.com"
                    },
                    "mobile": {
                        "type": "string",
                        "default": "+1234567890"
                    },
                    "comment": {
                        "type": "string",
                        "default": "This is a comment."
                    },
                    "admin_note": {
                        "type": "string",
                        "default": "This is an admin note."
                    },
                    "follow_up": {
                        "$ref": "#/components/schemas/YesNoEnum"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "FaqDetailResource": {
                "title": "FaqDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Faq Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Faq Description"
                    },
                    "category": {
                        "$ref": "#/components/schemas/SimpleCategoryResource"
                    },
                    "favorite": {
                        "type": "string",
                        "default": "yes"
                    },
                    "ordering": {
                        "type": "integer",
                        "default": 1
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "FaqResource": {
                "title": "FaqResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Faq Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Faq Description"
                    },
                    "category": {
                        "$ref": "#/components/schemas/SimpleCategoryResource"
                    },
                    "favorite": {
                        "type": "string",
                        "default": "yes"
                    },
                    "ordering": {
                        "type": "integer",
                        "default": 1
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "OpinionDetailResource": {
                "title": "OpinionDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "published_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "ordering": {
                        "type": "integer",
                        "default": 1
                    },
                    "view_count": {
                        "type": "integer",
                        "default": 1
                    },
                    "company": {
                        "type": "string",
                        "default": "Company"
                    },
                    "user_name": {
                        "type": "string",
                        "default": "User Name"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/image.jpg"
                    },
                    "comment": {
                        "type": "string",
                        "default": "Full opinion comment..."
                    }
                },
                "type": "object"
            },
            "OpinionResource": {
                "title": "OpinionResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "published_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "ordering": {
                        "type": "integer",
                        "default": 1
                    },
                    "view_count": {
                        "type": "integer",
                        "default": 1
                    },
                    "company": {
                        "type": "string",
                        "default": "Company"
                    },
                    "user_name": {
                        "type": "string",
                        "default": "User Name"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/image.jpg"
                    }
                },
                "type": "object"
            },
            "PageDetailResource": {
                "title": "PageDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Page Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Page Description"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "PageResource": {
                "title": "PageResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Page Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Page Description"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "PortfolioDetailResource": {
                "title": "PortfolioDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Website Redesign"
                    },
                    "description": {
                        "type": "string",
                        "default": "Modern responsive design"
                    },
                    "body": {
                        "type": "string",
                        "default": "Full portfolio content..."
                    },
                    "published": {
                        "type": "string",
                        "default": "active"
                    },
                    "published_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "execution_date": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "category": {
                        "$ref": "#/components/schemas/SimpleCategoryResource"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimpleTagResource"
                        }
                    },
                    "seo_option": {
                        "type": "object"
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/image.jpg"
                    },
                    "view_count": {
                        "type": "integer",
                        "default": "150"
                    },
                    "like_count": {
                        "type": "integer",
                        "default": "25"
                    },
                    "wish_count": {
                        "type": "integer",
                        "default": "10"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "PortfolioResource": {
                "title": "PortfolioResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Website Redesign"
                    },
                    "description": {
                        "type": "string",
                        "default": "Modern responsive design"
                    },
                    "published": {
                        "type": "string",
                        "default": "active"
                    },
                    "published_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "execution_date": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "category": {
                        "$ref": "#/components/schemas/SimpleCategoryResource"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SimpleTagResource"
                        }
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/image.jpg"
                    },
                    "view_count": {
                        "type": "integer",
                        "default": "150"
                    },
                    "like_count": {
                        "type": "integer",
                        "default": "25"
                    },
                    "wish_count": {
                        "type": "integer",
                        "default": "10"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "RoleDetailResource": {
                "title": "RoleDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "name": {
                        "type": "string",
                        "default": "Role name"
                    },
                    "description": {
                        "type": "string",
                        "default": "Role Description"
                    },
                    "guard_name": {
                        "type": "string",
                        "default": "web"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "RoleResource": {
                "title": "RoleResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "name": {
                        "type": "string",
                        "default": "Role name"
                    },
                    "description": {
                        "type": "string",
                        "default": "Role Description"
                    },
                    "guard_name": {
                        "type": "string",
                        "default": "web"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "SimpleBoardResource": {
                "title": "SimpleBoardResource",
                "properties": {
                    "id": {
                        "description": "Board id",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Project Alpha"
                    },
                    "color": {
                        "type": "string",
                        "example": "#FF5733"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "SimpleCardResource": {
                "title": "SimpleCardResource",
                "properties": {
                    "id": {
                        "description": "Card id",
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "type": "string",
                        "example": "Fix login bug"
                    },
                    "card_type": {
                        "type": "string",
                        "example": "task"
                    },
                    "priority": {
                        "type": "string",
                        "example": "high"
                    },
                    "status": {
                        "type": "string",
                        "example": "in_progress"
                    }
                },
                "type": "object"
            },
            "SimpleCategoryResource": {
                "title": "SimpleCategoryResource",
                "properties": {
                    "id": {
                        "description": "Category id",
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "type": "string",
                        "example": "Technology",
                        "nullable": true
                    },
                    "slug": {
                        "type": "string",
                        "example": "technology"
                    },
                    "image": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                    }
                },
                "type": "object"
            },
            "SimpleCommentResource": {
                "title": "SimpleCommentResource",
                "properties": {
                    "id": {
                        "description": "Comment id",
                        "type": "integer",
                        "example": "1"
                    },
                    "comment": {
                        "type": "string",
                        "example": "Great article!",
                        "nullable": true
                    },
                    "rate": {
                        "type": "integer",
                        "example": "5",
                        "nullable": true
                    },
                    "user": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    }
                },
                "type": "object"
            },
            "SimplePortfolioResource": {
                "title": "SimplePortfolioResource",
                "properties": {
                    "id": {
                        "description": "Portfolio id",
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "type": "string",
                        "example": "Website Redesign",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "example": "Modern responsive design",
                        "nullable": true
                    },
                    "image": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                    }
                },
                "type": "object"
            },
            "SimpleTagResource": {
                "title": "SimpleTagResource",
                "properties": {
                    "id": {
                        "description": "Tag id",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Laravel"
                    },
                    "slug": {
                        "type": "string",
                        "example": "laravel"
                    },
                    "image": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                    }
                },
                "type": "object"
            },
            "SimpleTeammateResource": {
                "title": "SimpleTeammateResource",
                "properties": {
                    "id": {
                        "description": "Teammate id",
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "type": "string",
                        "example": "John Doe",
                        "nullable": true
                    },
                    "position": {
                        "type": "string",
                        "example": "Senior Developer"
                    },
                    "image": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                    }
                },
                "type": "object"
            },
            "SimpleTicketResource": {
                "title": "SimpleTicketResource",
                "properties": {
                    "id": {
                        "description": "Ticket id",
                        "type": "integer",
                        "example": "1"
                    },
                    "subject": {
                        "type": "string",
                        "example": "Technical Support"
                    },
                    "key": {
                        "type": "string",
                        "example": "TICKET-123456"
                    },
                    "status": {
                        "type": "string",
                        "example": "open"
                    },
                    "priority": {
                        "type": "string",
                        "example": "high"
                    }
                },
                "type": "object"
            },
            "SimpleUserResource": {
                "title": "SimpleUserResource",
                "properties": {
                    "id": {
                        "description": "User id",
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "John",
                        "nullable": true
                    },
                    "family": {
                        "type": "string",
                        "example": "Doe",
                        "nullable": true
                    },
                    "mobile": {
                        "type": "string",
                        "example": "09379151111"
                    },
                    "image": {
                        "type": "string",
                        "example": "https://example.com/image.jpg"
                    }
                },
                "type": "object"
            },
            "SliderDetailResource": {
                "title": "SliderDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Slider Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Slider Description"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "extra_attributes": {
                        "type": "object",
                        "default": []
                    },
                    "ordering": {
                        "type": "integer",
                        "default": 1
                    },
                    "published_at": {
                        "type": "string",
                        "default": "2024-08-19"
                    },
                    "expired_at": {
                        "type": "string",
                        "default": "2024-08-19"
                    },
                    "link": {
                        "type": "string",
                        "default": "https://example.com"
                    },
                    "position": {
                        "$ref": "#/components/schemas/SliderPositionEnum"
                    },
                    "has_timer": {
                        "$ref": "#/components/schemas/YesNoEnum"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "SliderResource": {
                "title": "SliderResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "Slider Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "Slider Description"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "extra_attributes": {
                        "type": "object",
                        "default": []
                    },
                    "ordering": {
                        "type": "integer",
                        "default": 1
                    },
                    "published_at": {
                        "type": "string",
                        "default": "2024-08-19"
                    },
                    "expired_at": {
                        "type": "string",
                        "default": "2024-08-19"
                    },
                    "link": {
                        "type": "string",
                        "default": "https://example.com"
                    },
                    "position": {
                        "$ref": "#/components/schemas/SliderPositionEnum"
                    },
                    "has_timer": {
                        "$ref": "#/components/schemas/YesNoEnum"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "SocialMediaDetailResource": {
                "title": "SocialMediaDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "SocialMedia Title"
                    },
                    "description": {
                        "type": "string",
                        "default": "SocialMedia Description"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "SocialMediaResource": {
                "title": "SocialMediaResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "SocialMedia Title"
                    },
                    "link": {
                        "type": "string",
                        "default": "https://www.example.com"
                    },
                    "ordering": {
                        "type": "integer",
                        "default": 1
                    },
                    "position": {
                        "$ref": "#/components/schemas/SocialMediaPositionEnum"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "image": {
                        "type": "string",
                        "format": "url",
                        "default": "https://www.example.com/storage/media/1/conversions/image-100x100.jpg"
                    }
                },
                "type": "object"
            },
            "TagDetailResource": {
                "title": "TagDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "name": {
                        "type": "string",
                        "default": "Laravel"
                    },
                    "slug": {
                        "type": "string",
                        "default": "laravel"
                    },
                    "description": {
                        "type": "string",
                        "default": "PHP framework"
                    },
                    "body": {
                        "type": "string",
                        "default": "Detailed tag content..."
                    },
                    "type": {
                        "type": "string",
                        "default": "blog"
                    },
                    "order_column": {
                        "type": "integer",
                        "default": "1"
                    },
                    "languages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "seo_option": {
                        "type": "object"
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/image.jpg"
                    },
                    "is_in_use": {
                        "type": "boolean",
                        "default": true
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "TagResource": {
                "title": "TagResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "name": {
                        "type": "string",
                        "default": "Laravel"
                    },
                    "slug": {
                        "type": "string",
                        "default": "laravel"
                    },
                    "description": {
                        "type": "string",
                        "default": "PHP framework"
                    },
                    "type": {
                        "$ref": "#/components/schemas/TagTypeEnum"
                    },
                    "order_column": {
                        "type": "integer",
                        "default": "1"
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/image.jpg"
                    },
                    "is_in_use": {
                        "type": "boolean",
                        "default": true
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "TeammateDetailResource": {
                "title": "TeammateDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "John Doe"
                    },
                    "description": {
                        "type": "string",
                        "default": "Senior Developer"
                    },
                    "position": {
                        "type": "string",
                        "default": "Senior Developer"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "birthday": {
                        "type": "string",
                        "nullable": true
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/image.jpg"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "TeammateResource": {
                "title": "TeammateResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "title": {
                        "type": "string",
                        "default": "John Doe"
                    },
                    "description": {
                        "type": "string",
                        "default": "Senior Developer"
                    },
                    "position": {
                        "type": "string",
                        "default": "Senior Developer"
                    },
                    "published": {
                        "$ref": "#/components/schemas/BooleanEnum"
                    },
                    "birthday": {
                        "type": "string",
                        "nullable": true
                    },
                    "image": {
                        "type": "string",
                        "default": "https://example.com/image.jpg"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "TicketDetailResource": {
                "title": "TicketDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "subject": {
                        "type": "string",
                        "default": "Support Request"
                    },
                    "key": {
                        "type": "string",
                        "default": "TICKET-123456"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TicketStatusEnum"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/TicketPriorityEnum"
                    },
                    "department": {
                        "$ref": "#/components/schemas/TicketDepartmentEnum"
                    },
                    "user": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    },
                    "unread_messages_count": {
                        "type": "integer",
                        "default": "2"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "close_by": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TicketMessageResource"
                        }
                    }
                },
                "type": "object"
            },
            "TicketMessageDetailResource": {
                "title": "TicketMessageDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "message": {
                        "type": "string",
                        "default": "Issue resolved"
                    },
                    "is_from_admin": {
                        "type": "boolean",
                        "default": false
                    },
                    "read_by": {
                        "type": "integer",
                        "nullable": true
                    },
                    "ticket": {
                        "$ref": "#/components/schemas/SimpleTicketResource"
                    },
                    "user": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "TicketMessageResource": {
                "title": "TicketMessageResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "message": {
                        "type": "string",
                        "default": "Issue resolved"
                    },
                    "is_from_admin": {
                        "type": "boolean",
                        "default": false
                    },
                    "read_by": {
                        "type": "integer",
                        "nullable": true
                    },
                    "ticket": {
                        "$ref": "#/components/schemas/SimpleTicketResource"
                    },
                    "user": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "TicketResource": {
                "title": "TicketResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "subject": {
                        "type": "string",
                        "default": "Support Request"
                    },
                    "key": {
                        "type": "string",
                        "default": "TICKET-123456"
                    },
                    "status": {
                        "$ref": "#/components/schemas/TicketStatusEnum"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/TicketPriorityEnum"
                    },
                    "department": {
                        "$ref": "#/components/schemas/TicketDepartmentEnum"
                    },
                    "user": {
                        "$ref": "#/components/schemas/SimpleUserResource"
                    },
                    "unread_messages_count": {
                        "type": "integer",
                        "default": "2"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "UserDetailResource": {
                "title": "UserDetailResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "name": {
                        "type": "string",
                        "default": "John"
                    },
                    "family": {
                        "type": "string",
                        "default": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "default": "john@example.com"
                    },
                    "mobile": {
                        "type": "string",
                        "default": "09123456789"
                    },
                    "gender": {
                        "type": "string",
                        "default": "male"
                    },
                    "status": {
                        "type": "string",
                        "default": "active"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "nullable": true
                    },
                    "mobile_verified_at": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatar": {
                        "type": "string",
                        "default": "https://example.com/avatar.jpg"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "blogs_count": {
                        "type": "integer",
                        "default": "5"
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "UserResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "default": "1"
                    },
                    "name": {
                        "type": "string",
                        "default": "User Name"
                    },
                    "family": {
                        "type": "string",
                        "default": "User Family"
                    },
                    "mobile": {
                        "type": "string",
                        "default": "09123456789"
                    },
                    "email": {
                        "type": "string",
                        "default": "user@example.com"
                    },
                    "status": {
                        "type": "string",
                        "default": "active"
                    },
                    "avatar": {
                        "type": "string",
                        "default": "https://example.com/avatar.jpg"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updated_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    },
                    "created_at": {
                        "type": "string",
                        "default": "2024-08-19T07:26:07.000000Z"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "400": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "default": "Bad Request."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "401": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "default": "Unauthenticated."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "403": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "default": "Forbidden."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "500": {
                "description": "Internal Server Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "default": "Internal Server Error."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "parameters": {
            "advanced_search": {
                "name": "filter[a_search][]",
                "in": "query",
                "description": "Search in events",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "properties": {
                            "column": {
                                "type": "string",
                                "default": "id"
                            },
                            "operator": {
                                "type": "string",
                                "default": "=",
                                "enum": [
                                    "like",
                                    "=",
                                    ">",
                                    "<",
                                    ">=",
                                    "<="
                                ]
                            },
                            "from": {
                                "type": "string",
                                "default": "1"
                            },
                            "to": {
                                "type": "string",
                                "default": "",
                                "nullable": true
                            },
                            "contain": {
                                "type": "integer",
                                "default": "1",
                                "enum": [
                                    0,
                                    1
                                ]
                            }
                        },
                        "type": "object"
                    }
                }
            },
            "filter": {
                "name": "filter",
                "in": "query",
                "description": "Filter shifts",
                "required": false,
                "schema": {
                    "properties": {
                        "search": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    "type": "object"
                }
            },
            "search": {
                "name": "filter[search]",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "default": ""
                }
            },
            "name": {
                "name": "filter[name]",
                "in": "query",
                "required": false,
                "schema": {
                    "type": "string",
                    "default": ""
                }
            },
            "sort": {
                "name": "sort",
                "in": "query",
                "description": "Sort criteria for shifts (e.g., name, -created_at)",
                "required": false,
                "schema": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": [
                        "-id"
                    ]
                }
            },
            "page": {
                "name": "page",
                "in": "query",
                "description": "page number",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 1
                }
            },
            "page_limit": {
                "name": "page_limit",
                "in": "query",
                "description": "number of items per page",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 15
                }
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token",
                "name": "Authorization",
                "in": "header"
            },
            "clubId": {
                "type": "apiKey",
                "description": "Club ID header",
                "name": "X-Club-Id",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Banner",
            "description": "Banner"
        },
        {
            "name": "Blog",
            "description": "Blog"
        },
        {
            "name": "Board",
            "description": "Board"
        },
        {
            "name": "Card",
            "description": "Card"
        },
        {
            "name": "CardFlow",
            "description": "CardFlow"
        },
        {
            "name": "Category",
            "description": "Category"
        },
        {
            "name": "Client",
            "description": "Client"
        },
        {
            "name": "Comment",
            "description": "Comment"
        },
        {
            "name": "ContactUs",
            "description": "ContactUs"
        },
        {
            "name": "Faq",
            "description": "Faq"
        },
        {
            "name": "Opinion",
            "description": "Opinion"
        },
        {
            "name": "Page",
            "description": "Page"
        },
        {
            "name": "Portfolio",
            "description": "Portfolio"
        },
        {
            "name": "Role",
            "description": "Role"
        },
        {
            "name": "Slider",
            "description": "Slider"
        },
        {
            "name": "SocialMedia",
            "description": "SocialMedia"
        },
        {
            "name": "Splash",
            "description": "Splash"
        },
        {
            "name": "Tag",
            "description": "Tag"
        },
        {
            "name": "Teammate",
            "description": "Teammate"
        },
        {
            "name": "Ticket",
            "description": "Ticket"
        },
        {
            "name": "TicketMessage",
            "description": "TicketMessage"
        },
        {
            "name": "User",
            "description": "User"
        },
        {
            "name": "Utility",
            "description": "Utility"
        }
    ],
    "security": [
        {
            "sanctum": [],
            "clubId": []
        }
    ]
}